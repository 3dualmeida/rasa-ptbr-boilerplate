version: '2'

services:
  # =============================== Coach =================================
  # All the models are trained by this coach.
  coach:
    image: lappis/coach:boilerplate
    volumes:
      - notebook_models:/notebook_models
    command: sh -c "cp -r /src_models/* /notebook_models"

  # ================================= Bot =====================================
  # Generic Rasa bot, used to run console for example.
  bot:
    image: lappis/bot:boilerplate
    build:
      context: .
      dockerfile: ./docker/bot.Dockerfile
    restart: unless-stopped
    ports:
      - 5005:5005
    depends_on:
      - actions
    volumes:
      - ./bot:/bot
      - ./modules:/modules
    command: sh -c "rasa run -m /models/dialogue -vv --endpoints endpoints.yml --enable-api"

  # ================================= Actions =================================
  # Rasa middleware used to connect with external APIs.
  actions:
    build:
      context: .
      dockerfile: ./docker/actions.Dockerfile
    ports:
      - 5055:5055
    volumes:
      - ./bot/actions:/bot/actions
      - ./bot/Makefile:/bot/Makefile
    command: sh -c "make run-actions"

  # =============================== Analytics =================================
  # Analitics ElasticSearch Stack.
  elasticsearch:
    build:
      context: .
      dockerfile: ./docker/elasticsearch.Dockerfile
    restart: unless-stopped
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
    volumes:
      - esbackup:/usr/share/elasticsearch/backup
      - ./modules/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data

  # Visualization layer of Analitics Stack.
  kibana:
    build:
      context: .
      dockerfile: ./docker/kibana.Dockerfile
    restart: unless-stopped
    ports:
      - 5601:5601
    environment:
      - SERVER_PORT=5601
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - KIBANA_URL=http://kibana:5601
    depends_on:
      - elasticsearch

  # =============================== Broker ====================================
  # Custom broker to store Rasa tracker data.
  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    volumes:
      - ./db/rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  # Custom broker consumer responsible to store data into ElasticSearch.
  rabbitmq-consumer:
    build:
      context: .
      dockerfile: ./docker/rabbitmq/consumer.Dockerfile
    restart: unless-stopped
    volumes:
      - ./modules/rabbitmq/consumer/:/opt/scripts/
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

      # TODO: move this env vars to a envfile
      # Analytics config
      - ELASTICSEARCH_URL=elasticsearch:9200
      - ENVIRONMENT_NAME=localhost
      - BOT_VERSION=last-bot-commit-hash
      # - ELASTICSEARCH_USER=admin
      # - ELASTICSEARCH_PASSWORD=admin
      # - ELASTICSEARCH_HTTP_SCHEME=https
      # - ELASTICSEARCH_PORT=443
    command: python3 /opt/scripts/consume_bot_messages.py

  # ============================ Telegram Bot =================================
  # Specific Rasa bot integrated with Telegram.
  bot_telegram:
      build:
        context: .
        dockerfile: ./docker/bot.Dockerfile
      env_file:
        - docker/bot-telegram.env
      ports:
        - 5001:5001
      depends_on:
        - actions
      volumes:
        - ./bot:/bot
      command: sh -c "make run-telegram"

  # =============================== Notebooks =================================
  # Rasa lab to enhance hyperparameters.
  notebooks:
    build:
      context: .
      dockerfile: ./docker/notebooks.Dockerfile
    env_file:
      - docker/notebooks.env
    volumes:
      - ./coach:/work/coach
      - ./modules/notebooks:/work/notebooks
    ports:
      - 8888:8888
        #depends_on:
        #  - coach
# Shared volumes between containers (coach and bot).
volumes:
  notebook_models:
  esbackup:
  esdata:
    driver: local
